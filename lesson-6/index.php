<h1></h1>
<h3>1. Даны переменные $a=10 и $b=3. Найдите остаток от деления $a на $b.</h3>

<?php
function ol_todo_1( $a, $b ) {
	echo ( $a % $b ) * $b;
}

ol_todo_1( 25, 3 );
?>

<h3>2. Даны переменные $a и $b. Проверьте, что $a делится без остатка на $b. Если это так - выведите 'Делится' и результат деления, иначе выведите 'Делится с остатком' и остаток от деления.</h3>

<?php
function ol_todo_2( $a, $b ) {
	if ( 0 === $a % $b ) {
		echo 'Делится ' . $a / $b;
	} else {
		echo 'Делится с остатком ' . $a % $b;
	}
}

ol_todo_2( 10, 5 );
?>

<h1>Работа со степенью и корнем</h1>
<h6>Для решения задач данного блока вам понадобятся следующие функции: sqrt, pow.</h6>
<h3>3. Возведите 2 в 10 степень. Результат запишите в переменную $st.</h3>

<?php
function ol_todo_3( $a, $b ) {
	$st = pow( $a, $b );

	echo $st;
}

ol_todo_3( 2, 10 );
?>

<h3>4. Найдите квадратный корень из 245.</h3>

<?php
function ol_todo_4( $a ) {
	echo sqrt( $a );
}

ol_todo_4( 245 );
?>

<h3>5. Дан массив с элементами 4, 2, 5, 19, 13, 0, 10. Найдите корень из суммы квадратов его элементов. Для решения воспользуйтесь циклом foreach.</h3>

<?php
function ol_todo_5() {
	$arr    = array( 4, 2, 5, 19, 13, 0, 10 );
	$result = 0;

	foreach ( $arr as $value ) {
		$result += pow( $value, 2 );
	}

	echo sqrt( $result );
}

ol_todo_5();
?>

<h1>Работа с функциями округления</h1>
<h6>Для решения задач данного блока вам понадобятся следующие функции: round, ceil, floor.</h6>
<h3>6. Найдите квадратный корень из 379. Результат округлите до целых, до десятых, до сотых.</h3>

<?php
function ol_todo_6( $num ) {
	$result = sqrt( $num );

	echo round( $result ) . '<br>';
	echo round( $result, 1 ) . '<br>';
	echo round( $result, 2 ) . '<br>';
}

ol_todo_6( 379 );
?>

<h3>7. Найдите квадратный корень из 587. Округлите результат в большую и меньшую сторону, запишите результаты округления в ассоциативный массив с ключами 'floor' и 'ceil'.</h3>

<?php
function ol_todo_7( $num ) {
	$result       = sqrt( $num );
	$arr          = array();
	$arr['floor'] = floor( $result );
	$arr['ceil']  = ceil( $result );

	var_dump( $arr );
}

ol_todo_7( 587 );
?>

<h1>Работа с min и max</h1>
<h6>Для решения задач данного блока вам понадобятся следующие функции: min, max.</h6>
<h3>8. Даны числа 4, -2, 5, 19, -130, 0, 10. Найдите минимальное и максимальное число.</h3>

<?php
function ol_todo_8() {
	$arr = array( 4, -2, 5, 19, -130, 0, 10 );
	echo 'Min ' . min( $arr ) . '<br>';
	echo 'Max ' . max( $arr );
}

ol_todo_8();
?>

<h1>Работа с рандомом</h1>
<h6>Для решения задач данного блока вам понадобятся следующие функции: mt_rand.</h6>
<h3>9. Выведите на экран случайное число от 1 до 100.</h3>

<?php
function ol_todo_9() {
	echo mt_rand( 1, 100 );
}

ol_todo_9();
?>

<h3>10. Заполните массив 10-ю случайными числами. Подсказка: нужно воспользоваться циклами for или while</h3>

<?php
function ol_todo_10() {
	$arr = array();
	for ( $i = 0; $i <= 10; $i++ ) {
		$arr[] = mt_rand( 1, 100 );
	}

	var_dump( $arr );
}

ol_todo_10();
?>

<h1>Работа с модулем</h1>
<h6>Для решения задач данного блока вам понадобятся следующие функции: abs.</h6>
<h3>11. Даны переменные $a и $b. Найдите найдите модуль разности $a и $b. Проверьте работу скрипта самостоятельно для различных $a и $b.</h3>

<?php
function ol_todo_11( $a, $b ) {
	$result = $a - $b;

	echo abs( $result );
}

ol_todo_11( 5, 10 );
?>

<h3>12. Дан массив в числами, к примеру [1, 2, -1, -2, 3, -3]. Создайте из него новый массив так, чтобы отрицательные числа стали положительными, то есть у нас должен получиться такой массив: [1, 2, 1, 2, 3, 3].</h3>

<?php
function ol_todo_12() {
	$arr     = array( 1, 2, -1, -2, 3, -3 );
	$new_arr = array();

	foreach ( $arr as $value ) {
		$new_arr[] = abs( $value );
	}

	var_dump( $new_arr );
}

ol_todo_12();
?>

<h1>Задачи</h1>
<h3>13. Дано число, например 30. У этого числа есть делители - числа, на которое оно делится без остатка. Делители числа 30 - это 1, 2, 3, 5, 6, 10, 15, 30. Задача: сделайте массив делителей нашего числа. Число может быть любым, не обязательно, 30.</h3>

<?php
function ol_todo_13( $num ) {
	for ( $i = 1; $i <= $num; $i++ ) {
		if ( 0 === $num % $i ) {
			echo $i . ' ';
		}
	}
}

ol_todo_13( 30 );
?>

<h3>14. Дан массив [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]. Узнайте, сколько первых элементов массива нужно сложить, чтобы сумма получилась больше 10.</h3>

<?php
function ol_todo_14() {
	$arr    = array( 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 );
	$result = 0;

	for ( $i = 0; $i <= count( $arr ); $i++ ) {
		$result += $arr[ $i ];
		if ( 10 <= $result ) {
			echo ++$i;
			break;
		}
	}
}

ol_todo_14();
?>
